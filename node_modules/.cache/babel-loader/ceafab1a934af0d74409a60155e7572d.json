{"ast":null,"code":"var _jsxFileName = \"/Users/flaviafigueiredo/Documents/Github/flavia-aircraft-scheduling/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { AircraftCard } from \"./components/AircraftCard\";\nimport { FlightCard } from \"./components/FlightCard\";\nimport { List } from \"./components/List\";\nimport { RotationCard } from \"./components/RotationCard\";\nimport { aircrafts, flights } from \"./utils/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n_c = Wrapper;\nconst Header = styled.h2`\n    padding-bottom: 5px;\n`;\n_c2 = Header;\n\nfunction App() {\n  _s();\n\n  const [rotation, setRotation] = useState([]);\n  const [availableFlights, setAvailableFlights] = useState(flights);\n  const onDragStart = useCallback((e, id) => {\n    e.dataTransfer.setData(\"id\", id);\n  }, []);\n  const onDrop = useCallback(e => {\n    let id = e.dataTransfer.getData(\"id\");\n    const flight = flights.filter(f => f.ident === id);\n    setRotation(prev => [...prev, flight]); // Conditions to add\n    // 1 - Airport of arrival from the previous flight should be the airport of departure of the next flight\n    // 2 - The time difference between the time of arrival of the previous flight and the departure of the next \n    //  has to be 15 minutes or higher\n\n    setAvailableFlights(prev => prev.filter(p => p.ident !== id));\n  }, []);\n\n  const onDragOver = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: result => console.log(result),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"Aircrafts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: aircrafts.map(aircraft => /*#__PURE__*/_jsxDEV(AircraftCard, {\n            aircraft: aircraft\n          }, aircraft.ident, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          children: \"Rotation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(List, { ...provided.droppableProps,\n            onDragOver: onDragOver,\n            onDrop: onDrop,\n            children: rotation.map(flight => /*#__PURE__*/_jsxDEV(RotationCard, {\n              flight: flight\n            }, flight.ident, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          children: \"Flights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Draggable, {\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(List, {\n            children: availableFlights.map(flight => /*#__PURE__*/_jsxDEV(FlightCard, {\n              flight: flight,\n              onDragStart: e => onDragStart(e, flight.ident)\n            }, flight.ident, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"IWmnXWp6lpR4LDomvlhfwNjmbC0=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/flaviafigueiredo/Documents/Github/flavia-aircraft-scheduling/src/App.jsx"],"names":["React","useCallback","useState","DragDropContext","Draggable","Droppable","styled","AircraftCard","FlightCard","List","RotationCard","aircrafts","flights","Wrapper","div","Header","h2","App","rotation","setRotation","availableFlights","setAvailableFlights","onDragStart","e","id","dataTransfer","setData","onDrop","getData","flight","filter","f","ident","prev","p","onDragOver","preventDefault","result","console","log","map","aircraft","provided","snapshot","droppableProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { AircraftCard } from \"./components/AircraftCard\";\nimport { FlightCard } from \"./components/FlightCard\";\nimport { List } from \"./components/List\";\nimport { RotationCard } from \"./components/RotationCard\";\nimport { aircrafts, flights } from \"./utils/data\";\n\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nconst Header = styled.h2`\n    padding-bottom: 5px;\n`;\n\nfunction App() {\n    const [ rotation, setRotation ] = useState([]);\n    const [ availableFlights, setAvailableFlights ] = useState(flights);\n\n    const onDragStart = useCallback((e, id) => {\n        e.dataTransfer.setData(\"id\", id);\n    }, []);\n\n    const onDrop = useCallback((e) => {\n        let id = e.dataTransfer.getData(\"id\");\n        const flight = flights.filter((f) => f.ident === id);\n\n        setRotation((prev) => ([ ...prev, flight ]));\n\n        // Conditions to add\n        // 1 - Airport of arrival from the previous flight should be the airport of departure of the next flight\n        // 2 - The time difference between the time of arrival of the previous flight and the departure of the next \n        //  has to be 15 minutes or higher\n        setAvailableFlights(prev => prev.filter((p) =>  p.ident !== id));\n    }, []);\n\n    const onDragOver = (e) => {\n        e.preventDefault();\n    };\n\n    return (\n        <DragDropContext onDragEnd={result => console.log(result)}>\n            <div className=\"App\">\n                <div>Header</div>\n                <Wrapper>\n                    <Header>Aircrafts</Header>\n                    <List>\n                        {aircrafts.map((aircraft) => (\n                            <AircraftCard\n                                key={aircraft.ident}\n                                aircraft={aircraft}\n                            />\n                        ))}\n                    </List>\n                    <Header>Rotation</Header>\n                    <Droppable droppableId={\"droppable\"}>\n                        {(provided, snapshot) => (\n                            <List\n                                {...provided.droppableProps}\n                                onDragOver={onDragOver}\n                                onDrop={onDrop}>\n                                {rotation.map((flight) => (\n                                    <RotationCard\n                                        key={flight.ident}\n                                        flight={flight}\n                                    />\n                                ))}\n                            </List>)}\n                    </Droppable>\n                    <Header>Flights</Header>\n                    <Draggable>\n                        {(provided, snapshot) => (\n                            <List>\n                                {/* // Load more */}\n                                {availableFlights.map((flight) => (\n                                    <FlightCard\n                                        key={flight.ident}\n                                        flight={flight}\n                                        onDragStart={(e) => onDragStart(e, flight.ident)}\n                                    />\n                                ))}\n                            </List>)}\n                    </Draggable>\n                </Wrapper>\n            </div>\n        </DragDropContext>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}