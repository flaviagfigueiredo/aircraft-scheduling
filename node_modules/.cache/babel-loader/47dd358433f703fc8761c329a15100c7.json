{"ast":null,"code":"var _jsxFileName = \"/Users/flaviafigueiredo/Documents/Github/flavia-aircraft-scheduling/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nconst Arr = [{\n  name: \"North\",\n  key: \"12353\"\n}, {\n  name: \"South\",\n  key: \"23463\"\n}, {\n  name: \"East\",\n  key: \"54643\"\n}, {\n  name: \"West\",\n  key: \"4435\"\n}];\n\nconst Projects = () => {\n  _s();\n\n  const [project, setProject] = useState(Arr);\n\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    if (result.destination.index === result.source.index) return;\n    const projects = reorder(project, result.source.index, result.destination.index); //store reordered state.\n\n    setProject(projects);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"list\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        style: {\n          border: \"1px solid #242424\",\n          opacity: 0.5,\n          borderRadius: \"5px\"\n        },\n        children: [project && project.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: item.key,\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"green\"\n              },\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this)\n        }, item.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Projects, \"9aMNsY8Qx2Arjd5vpmvD5MH0y+c=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/flaviafigueiredo/Documents/Github/flavia-aircraft-scheduling/src/App.jsx"],"names":["React","useState","DragDropContext","Droppable","Draggable","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","Arr","name","key","Projects","project","setProject","onDragEnd","destination","index","source","projects","provided","innerRef","droppableProps","border","opacity","borderRadius","map","item","draggableProps","dragHandleProps","color","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\nreturn result;\n};\nconst Arr = [\n  {\n    name: \"North\",\n    key: \"12353\",\n  },\n  {\n    name: \"South\",\n    key: \"23463\",\n  },\n  {\n    name: \"East\",\n    key: \"54643\",\n  },\n  {\n    name: \"West\",\n    key: \"4435\",\n  },\n]\nconst Projects = () => {\n  const [project, setProject] = useState(Arr)\nconst onDragEnd = (result) => {\n    if (!result.destination) return;\n    if (result.destination.index === result.source.index) return;\nconst projects = reorder(\n      project,\n      result.source.index,\n      result.destination.index\n    );\n    //store reordered state.\n    setProject(projects)\n  }\nreturn (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"list\">\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            style={{ border: \"1px solid #242424\", opacity: 0.5, borderRadius: \"5px\" }}\n          >\n            {project && project.map((item, index) =>\n              <Draggable draggableId={item.key} key={item.key} index={index}>\n                {(provided) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                  >\n                    <p style={{ color: \"green\" }}>{item.name}</p>\n                  </div>\n                )}\n              </Draggable>)}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  )\n}\nexport default Projects"]},"metadata":{},"sourceType":"module"}