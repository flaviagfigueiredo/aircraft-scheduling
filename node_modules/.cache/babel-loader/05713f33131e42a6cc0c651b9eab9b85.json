{"ast":null,"code":"var _jsxFileName = \"/Users/flaviafigueiredo/Documents/Github/flavia-aircraft-scheduling/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { AircraftCard } from \"./components/AircraftCard\";\nimport Flight from \"./components/Flight/Flight\";\nimport { List } from \"./components/List\";\nimport { move } from \"./utils/helpers\";\nimport Timeline from \"./components/Timeline/Timeline\";\nimport { aircrafts, flights } from \"./utils/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n_c = Wrapper;\nconst Header = styled.h2`\n    padding-bottom: 5px;\n`;\n_c2 = Header;\n\nfunction App() {\n  _s();\n\n  const [rotation, setRotation] = useState(flights.slice(2, 1));\n  const [availableFlights, setAvailableFlights] = useState(flights);\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    console.log(result); // Dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId == \"rotation\") {\n      return;\n    }\n\n    if (destination.droppableId === \"droppable\") return;\n\n    if (destination.droppableId == \"rotation\") {\n      console.log('test'); // Departure Airport of the flight must be the same of the previous flight\n\n      if (checkIfValid(draggableId, destination.index - 1)) {\n        const r = move(availableFlights, rotation, source, destination);\n        setRotation(r.rotation);\n        setAvailableFlights(r.droppable);\n      }\n    }\n  }; // previousFlight id -> destionation -> index ----> rotation - index - 1\n\n\n  const checkIfValid = (flightId, previousFlightId) => {\n    const flight = flights.find(f => f.ident === flightId);\n    const previousFlight = rotation[previousFlightId] || null;\n    console.log(flight, previousFlight);\n    if (!previousFlight) return true; // 1200 seconds = 20 minutes\n\n    console.log(previousFlight.departuretime + 1200, flight.arrivaltime);\n\n    if (previousFlight.departuretime + 1200 <= flight.arrivaltime) {\n      return true;\n    }\n\n    if (previousFlight.destination === flight.origin) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: \"Aircrafts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: aircrafts.map(aircraft => /*#__PURE__*/_jsxDEV(AircraftCard, {\n              aircraft: aircraft\n            }, aircraft.ident, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            width: \"250px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: \"Rotation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"rotation\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              style: {\n                width: \"200px\"\n              },\n              children: [rotation.map((flight, index) => /*#__PURE__*/_jsxDEV(Flight, {\n                isDragDisabled: true,\n                index: index,\n                flight: flight\n              }, flight.ident, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), \"test\", /*#__PURE__*/_jsxDEV(Timeline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            width: \"250px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: \"Available Flights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"droppable\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              children: [availableFlights.map((flight, index) => /*#__PURE__*/_jsxDEV(Flight, {\n                index: index,\n                flight: flight\n              }, flight.ident, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 37\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"J1YRAw0NhJm8z6+qNMkIpNmAg70=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/flaviafigueiredo/Documents/Github/flavia-aircraft-scheduling/src/App.jsx"],"names":["React","useState","DragDropContext","Droppable","styled","AircraftCard","Flight","List","move","Timeline","aircrafts","flights","Wrapper","div","Header","h2","App","rotation","setRotation","slice","availableFlights","setAvailableFlights","onDragEnd","result","source","destination","draggableId","console","log","droppableId","checkIfValid","index","r","droppable","flightId","previousFlightId","flight","find","f","ident","previousFlight","departuretime","arrivaltime","origin","display","flexDirection","alignItems","map","aircraft","width","provided","innerRef","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { AircraftCard } from \"./components/AircraftCard\";\nimport Flight from \"./components/Flight/Flight\";\nimport { List } from \"./components/List\";\nimport { move } from \"./utils/helpers\";\nimport Timeline from \"./components/Timeline/Timeline\";\nimport { aircrafts, flights } from \"./utils/data\";\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nconst Header = styled.h2`\n    padding-bottom: 5px;\n`;\n\nfunction App() {\n    const [ rotation, setRotation ] = useState(flights.slice(2,1));\n    const [ availableFlights, setAvailableFlights ] = useState(flights);\n\n    const onDragEnd = (result) => {\n        const { source, destination, draggableId } = result;\n\n        console.log(result);\n\n        // Dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        if (source.droppableId == \"rotation\") {\n            return;\n        }\n\n        if (destination.droppableId === \"droppable\") return;\n\n        if (destination.droppableId == \"rotation\") {\n            console.log('test')\n\n            // Departure Airport of the flight must be the same of the previous flight\n            if(checkIfValid(draggableId, destination.index - 1)) {\n                const r = move(availableFlights, rotation, source, destination);\n                setRotation(r.rotation);\n                setAvailableFlights(r.droppable);\n            }\n\n        }\n    };\n\n    // previousFlight id -> destionation -> index ----> rotation - index - 1\n    const checkIfValid = (flightId, previousFlightId) => {\n        const flight = flights.find(f => f.ident === flightId);\n        const previousFlight = rotation[previousFlightId] || null;\n\n        console.log(flight, previousFlight)\n\n        if (!previousFlight) return true;\n\n        // 1200 seconds = 20 minutes\n        console.log(previousFlight.departuretime + 1200,  flight.arrivaltime )\n        if( previousFlight.departuretime + 1200 <= flight.arrivaltime ) {\n            return true;\n        }\n\n        if( previousFlight.destination === flight.origin ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <div className=\"App\">\n                <div>Header</div>\n                <Wrapper>\n                    {/* Aircrafts List */}\n                    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n                        <Header>Aircrafts</Header>\n                        <List>\n                            {aircrafts.map((aircraft) => (\n                                <AircraftCard key={aircraft.ident} aircraft={aircraft} />\n                            ))}\n                        </List>\n                    </div>\n                    {/* Rotation */}\n                    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\",  width: \"250px\" }}>\n                        <Header>Rotation</Header>\n\n                        <Droppable droppableId={\"rotation\"}>\n                            {(provided) => (\n                                <div ref={provided.innerRef} style={{  width: \"200px\"}}>\n                                    {rotation.map((flight, index) => (\n                                        <Flight\n                                        isDragDisabled={true}\n                                        key={flight.ident}\n                                        index={index}\n                                        flight={flight}\n                                    />))}\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                        test\n                        <Timeline />\n                     </div>\n                    {/* Flight List */}\n                    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\",  width: \"250px\" }}>\n                    <Header>Available Flights</Header>\n                    <Droppable droppableId={\"droppable\"}>\n                        {(provided) => (\n                            <div  ref={provided.innerRef}>\n                                {availableFlights.map((flight, index) => (\n                                    <Flight\n                                        key={flight.ident}\n                                        index={index}\n                                        flight={flight}\n                                    />)\n                                )}\n                                {provided.placeholder}\n                            </div>)}\n                    </Droppable>\n                    </div>\n                </Wrapper>\n            </div>\n        </DragDropContext>);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}