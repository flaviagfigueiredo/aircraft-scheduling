{"ast":null,"code":"var _jsxFileName = \"/Users/flaviafigueiredo/Documents/Github/flavia-aircraft-scheduling/src/App.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-indent */\n\n/* eslint-disable indent */\nimport React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { AircraftCard } from \"./components/AircraftCard\";\nimport Flight from \"./components/Flight/Flight\";\nimport { List } from \"./components/List\";\nimport { RotationCard } from \"./components/RotationCard\";\nimport { aircrafts, flights } from \"./utils/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n_c = Wrapper;\nconst Header = styled.h2`\n    padding-bottom: 5px;\n`;\n_c2 = Header;\n\nfunction App() {\n  _s();\n\n  const [columns, setColumns] = useState([columnsFromBackend]);\n  const [rotation, setRotation] = useState(flights.slice(2, 1));\n  const [availableFlights, setAvailableFlights] = useState(flights); // a little function to help us with reordering the result\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  }; // /**\n  //  * Moves an item from one list to another list.\n  //  */\n  // const move = (source, destination, droppableSource, droppableDestination) => {\n  //     const sourceClone = Array.from(source);\n  //     const destClone = Array.from(destination);\n  //     const [removed] = sourceClone.splice(droppableSource.index, 1);\n  //     destClone.splice(droppableDestination.index, 0, removed);\n  //     const result = {};\n  //     result[droppableSource.droppableId] = sourceClone;\n  //     result[droppableDestination.droppableId] = destClone;\n  //     return result;\n  // };\n\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result; // Dropped outside the list\n\n    if (!destination) {\n      return;\n    } // Dropped in the same list\n\n\n    if (result.destination.index === result.source.index) return;\n\n    if (source.droppableId === \"droppable\") {\n      const flight = flights.find(f => f.ident === draggableId);\n      setRotation(prev => [...prev, flight]);\n      setAvailableFlights(prev => prev.filter(p => p.ident !== draggableId));\n    }\n\n    const projects = reorder(flights, // project is state \n    result.source.index, result.destination.index); //store reordered state.\n    //   setProject(projects);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"Aircrafts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: aircrafts.map(aircraft => /*#__PURE__*/_jsxDEV(AircraftCard, {\n            aircraft: aircraft\n          }, aircraft.ident, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"rotation\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: \"Rotation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              innerRef: provided.innerRef,\n              children: rotation.map(flight => {\n                return /*#__PURE__*/_jsxDEV(RotationCard, {\n                  flight: flight\n                }, flight.ident, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [availableFlights.map((flight, index) => /*#__PURE__*/_jsxDEV(Flight, {\n                index: index,\n                flight: flight\n              }, flight.ident, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 41\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"rC3K5kgrpaVFZVYQag2uHn2OuA0=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/flaviafigueiredo/Documents/Github/flavia-aircraft-scheduling/src/App.jsx"],"names":["React","useState","DragDropContext","Draggable","Droppable","styled","AircraftCard","Flight","List","RotationCard","aircrafts","flights","Wrapper","div","Header","h2","App","columns","setColumns","columnsFromBackend","rotation","setRotation","slice","availableFlights","setAvailableFlights","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","onDragEnd","source","destination","draggableId","index","droppableId","flight","find","f","ident","prev","filter","p","projects","map","aircraft","provided","snapshot","innerRef","placeholder"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-indent */\n/* eslint-disable indent */\nimport React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { AircraftCard } from \"./components/AircraftCard\";\nimport Flight from \"./components/Flight/Flight\";\nimport { List } from \"./components/List\";\nimport { RotationCard } from \"./components/RotationCard\";\nimport { aircrafts, flights } from \"./utils/data\";\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nconst Header = styled.h2`\n    padding-bottom: 5px;\n`;\n\nfunction App() {\n    const [columns, setColumns] = useState([columnsFromBackend]);\n\n    const [ rotation, setRotation ] = useState(flights.slice(2,1));\n    const [ availableFlights, setAvailableFlights ] = useState(flights);\n\n    // a little function to help us with reordering the result\n    const reorder = (list, startIndex, endIndex) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n        return result;\n    };\n\n    // /**\n    //  * Moves an item from one list to another list.\n    //  */\n    // const move = (source, destination, droppableSource, droppableDestination) => {\n    //     const sourceClone = Array.from(source);\n    //     const destClone = Array.from(destination);\n    //     const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    //     destClone.splice(droppableDestination.index, 0, removed);\n\n    //     const result = {};\n    //     result[droppableSource.droppableId] = sourceClone;\n    //     result[droppableDestination.droppableId] = destClone;\n\n    //     return result;\n    // };\n\n\n\n    const onDragEnd = (result) => {\n        const { source, destination, draggableId } = result;\n\n        // Dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        // Dropped in the same list\n        if (result.destination.index === result.source.index) return;\n\n        \n        if (source.droppableId === \"droppable\") {\n            const flight = flights.find(f => f.ident === draggableId);\n\n            setRotation(prev => [...prev, flight]);\n            setAvailableFlights(prev => prev.filter((p) =>  p.ident !== draggableId));\n        }\n\n        const projects = reorder(\n            flights, // project is state \n            result.source.index,\n            result.destination.index\n          );\n          //store reordered state.\n\n        //   setProject(projects);\n            \n    };\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <div className=\"App\">\n                <div>Header</div>\n                <Wrapper>\n\n                    {/* Aircrafts List */}\n                    <Header>Aircrafts</Header>\n                    <List>\n                        {aircrafts.map((aircraft) => (\n                            <AircraftCard key={aircraft.ident} aircraft={aircraft} />\n                        ))}\n                    </List>\n\n                    <Droppable droppableId={\"rotation\"}>\n                        {(provided, snapshot) => (\n                            <>\n                        {/* Rotation */}\n                                <Header>Rotation</Header>\n                                <List innerRef={provided.innerRef}>\n                                    {rotation.map((flight) => {\n                                        return (\n                                        <RotationCard\n                                            key={flight.ident}\n                                            flight={flight}\n                                        />\n                                    );\n                                    })}\n                                </List>\n                                \n                                {/* Flight List */}\n                                <div>\n                                    {availableFlights.map((flight, index) => (\n                                        <Flight \n                                            key={flight.ident}\n                                            index={index}\n                                            flight={flight}\n                                        />)\n                                    )}\n                                    {provided.placeholder}\n                                </div>\n                            </>)}\n                    </Droppable>\n                </Wrapper>\n                \n            </div>\n        </DragDropContext>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}