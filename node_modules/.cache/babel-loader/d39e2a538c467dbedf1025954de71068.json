{"ast":null,"code":"var _jsxFileName = \"/Users/flaviafigueiredo/Documents/Github/flavia-aircraft-scheduling/src/components/Timeline/Timeline.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Busy = styled.div`\n    height: 15px;\n    width: ${_ref => {\n  let {\n    duration\n  } = _ref;\n  return `${duration}%`;\n}};\n    color: red;\n`;\n_c = Busy;\nconst Turnaround = styled.div`\n    height: 15px;\n    width: ${_ref2 => {\n  let {\n    duration\n  } = _ref2;\n  return `${duration}%`;\n}};\n    color: purple;\n`;\n_c2 = Turnaround;\nconst Free = styled.div`\n    height: 15px;\n    width: ${_ref3 => {\n  let {\n    duration\n  } = _ref3;\n  return `${duration}%`;\n}};\n    color: green;\n`; // 1440 min -> 24 hours\n\n_c3 = Free;\n\nconst Timeline = () => {\n  const test = [{\n    type: \"busy\",\n    duration: 440 / 14.4\n  }, {\n    type: \"turnaround\",\n    duration: 15 / 14.4\n  }, {\n    type: \"free\",\n    duration: 985 / 14.4\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: test.map((segment, index) => {\n      if (segment.type === \"busy\") return /*#__PURE__*/_jsxDEV(Busy, {\n        duration: segment.duration\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 50\n      }, this);\n      if (segment.type === \"turnaround\") return /*#__PURE__*/_jsxDEV(Turnaround, {\n        duration: segment.duration\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 56\n      }, this);\n      if (segment.type === \"free\") return /*#__PURE__*/_jsxDEV(Free, {\n        duration: segment.duration\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 50\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Timeline;\nexport default Timeline;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Busy\");\n$RefreshReg$(_c2, \"Turnaround\");\n$RefreshReg$(_c3, \"Free\");\n$RefreshReg$(_c4, \"Timeline\");","map":{"version":3,"sources":["/Users/flaviafigueiredo/Documents/Github/flavia-aircraft-scheduling/src/components/Timeline/Timeline.jsx"],"names":["React","styled","Busy","div","duration","Turnaround","Free","Timeline","test","type","map","segment","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAI;AACxB;AACA,aAAa;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAmB,GAAEA,QAAS,GAA9B;AAAA,CAAkC;AAC/C;AACA,CAJA;KAAMF,I;AAMN,MAAMG,UAAU,GAAGJ,MAAM,CAACE,GAAI;AAC9B;AACA,aAAa;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAmB,GAAEA,QAAS,GAA9B;AAAA,CAAkC;AAC/C;AACA,CAJA;MAAMC,U;AAMN,MAAMC,IAAI,GAAGL,MAAM,CAACE,GAAI;AACxB;AACA,aAAa;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAmB,GAAEA,QAAS,GAA9B;AAAA,CAAkC;AAC/C;AACA,CAJA,C,CAMA;;MANME,I;;AAON,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,IAAI,GAAG,CACT;AACIC,IAAAA,IAAI,EAAE,MADV;AAEIL,IAAAA,QAAQ,EAAE,MAAM;AAFpB,GADS,EAKT;AACIK,IAAAA,IAAI,EAAE,YADV;AAEIL,IAAAA,QAAQ,EAAE,KAAK;AAFnB,GALS,EAST;AACIK,IAAAA,IAAI,EAAE,MADV;AAEIL,IAAAA,QAAQ,EAAE,MAAM;AAFpB,GATS,CAAb;AAeA,sBACA;AAAA,cAEII,IAAI,CAACE,GAAL,CAAS,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACzB,UAAID,OAAO,CAACF,IAAR,KAAiB,MAArB,EAA6B,oBAAQ,QAAC,IAAD;AAAkB,QAAA,QAAQ,EAAEE,OAAO,CAACP;AAApC,SAAWQ,KAAX;AAAA;AAAA;AAAA;AAAA,cAAR;AAC7B,UAAID,OAAO,CAACF,IAAR,KAAiB,YAArB,EAAmC,oBAAQ,QAAC,UAAD;AAA0B,QAAA,QAAQ,EAAEE,OAAO,CAACP;AAA5C,SAAkBQ,KAAlB;AAAA;AAAA;AAAA;AAAA,cAAR;AACnC,UAAID,OAAO,CAACF,IAAR,KAAiB,MAArB,EAA6B,oBAAQ,QAAC,IAAD;AAAoB,QAAA,QAAQ,EAAEE,OAAO,CAACP;AAAtC,SAAYQ,KAAZ;AAAA;AAAA;AAAA;AAAA,cAAR;AAChC,KAJD;AAFJ;AAAA;AAAA;AAAA;AAAA,UADA;AAWH,CA3BD;;MAAML,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Busy = styled.div`\n    height: 15px;\n    width: ${({ duration }) => `${duration}%` };\n    color: red;\n`\n\nconst Turnaround = styled.div`\n    height: 15px;\n    width: ${({ duration }) => `${duration}%` };\n    color: purple;\n`\n\nconst Free = styled.div`\n    height: 15px;\n    width: ${({ duration }) => `${duration}%` };\n    color: green;\n`\n\n// 1440 min -> 24 hours\nconst Timeline = () => {\n    const test = [\n        {\n            type: \"busy\",\n            duration: 440 / 14.4 ,\n        },\n        {\n            type: \"turnaround\",\n            duration: 15 / 14.4,\n        },\n        {\n            type: \"free\",\n            duration: 985 / 14.4,\n        }\n    ];\n\n    return (\n    <div>\n        {\n        test.map((segment, index) => {\n            if (segment.type === \"busy\") return (<Busy key={index} duration={segment.duration}/>);\n            if (segment.type === \"turnaround\") return (<Turnaround  key={index}  duration={segment.duration}/>);\n            if (segment.type === \"free\") return (<Free  key={index}  duration={segment.duration}/>);\n        })\n        }\n    </div>\n    )\n}\n\nexport default Timeline;"]},"metadata":{},"sourceType":"module"}