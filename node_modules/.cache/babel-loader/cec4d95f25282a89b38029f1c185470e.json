{"ast":null,"code":"var _jsxFileName = \"/Users/flaviafigueiredo/Documents/Github/flavia-aircraft-scheduling/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { AircraftCard } from \"./components/AircraftCard\";\nimport Flight from \"./components/Flight/Flight\";\nimport { List } from \"./components/List\";\nimport { move } from \"./utils/helpers/dnd\";\nimport Timeline from \"./components/Timeline/Timeline\";\nimport { checkIfValid } from \"./utils/helpers/validations\";\nimport { aircrafts, flights } from \"./utils/data\";\nimport { calculateTimePeriods, calculateUsage } from \"./utils/helpers/timeline\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n_c = Wrapper;\nconst Header = styled.h2`\n    padding-bottom: 5px;\n`;\n_c2 = Header;\n\nfunction App() {\n  _s();\n\n  const [rotation, setRotation] = useState(flights.slice(2, 1));\n  const [availableFlights, setAvailableFlights] = useState(flights);\n  const periods = useMemo(() => calculateTimePeriods(rotation), [rotation]);\n  const usage = useMemo(() => calculateUsage(periods), [periods]);\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n\n    if (!destination || source.droppableId == \"rotation\" || destination.droppableId === \"droppable\") {\n      return;\n    }\n\n    if (destination.droppableId == \"rotation\") {\n      // Departure Airport of the flight must be the same of the previous flight\n      if (!checkIfValid(flights, draggableId, destination.index)) {\n        return;\n      }\n\n      const r = move(availableFlights, rotation, source, destination);\n      setRotation(r.rotation);\n      setAvailableFlights(r.droppable);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: \"Aircrafts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: aircrafts.map(aircraft => /*#__PURE__*/_jsxDEV(AircraftCard, {\n              aircraft: aircraft,\n              percentage: usage\n            }, aircraft.ident, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            width: \"250px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: \"Rotation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"rotation\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              style: {\n                width: \"200px\"\n              },\n              children: [rotation.map((flight, index) => /*#__PURE__*/_jsxDEV(Flight, {\n                isDragDisabled: true,\n                index: index,\n                flight: flight\n              }, flight.ident, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 41\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Timeline, {\n            periods: periods\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            width: \"250px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: \"Available Flights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"droppable\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              children: [availableFlights.map((flight, index) => /*#__PURE__*/_jsxDEV(Flight, {\n                index: index,\n                flight: flight\n              }, flight.ident, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"7zNSQytZeQdKlBXSYVq+b6K4bcg=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/flaviafigueiredo/Documents/Github/flavia-aircraft-scheduling/src/App.jsx"],"names":["React","useState","useMemo","DragDropContext","Droppable","styled","AircraftCard","Flight","List","move","Timeline","checkIfValid","aircrafts","flights","calculateTimePeriods","calculateUsage","Wrapper","div","Header","h2","App","rotation","setRotation","slice","availableFlights","setAvailableFlights","periods","usage","onDragEnd","result","source","destination","draggableId","droppableId","index","r","droppable","display","flexDirection","alignItems","map","aircraft","ident","width","provided","innerRef","flight","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { AircraftCard } from \"./components/AircraftCard\";\nimport Flight from \"./components/Flight/Flight\";\nimport { List } from \"./components/List\";\nimport { move } from \"./utils/helpers/dnd\";\nimport Timeline from \"./components/Timeline/Timeline\";\nimport { checkIfValid } from \"./utils/helpers/validations\";\nimport { aircrafts, flights } from \"./utils/data\";\nimport { calculateTimePeriods, calculateUsage } from \"./utils/helpers/timeline\";\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nconst Header = styled.h2`\n    padding-bottom: 5px;\n`;\n\n\nfunction App() {\n    const [ rotation, setRotation ] = useState(flights.slice(2,1));\n    const [ availableFlights, setAvailableFlights ] = useState(flights);\n\n    const periods = useMemo(() => calculateTimePeriods(rotation), [rotation]);\n    const usage = useMemo(() => calculateUsage(periods), [periods]);\n\n\n    const onDragEnd = (result) => {\n        const { source, destination, draggableId } = result;\n\n        if (!destination || source.droppableId == \"rotation\" || destination.droppableId === \"droppable\" ) {\n            return;\n        }\n\n        if (destination.droppableId == \"rotation\") {\n            // Departure Airport of the flight must be the same of the previous flight\n            if(!checkIfValid(flights, draggableId, destination.index)) {\n                return;\n            }\n            \n            const r = move(availableFlights, rotation, source, destination);\n            setRotation(r.rotation);\n            setAvailableFlights(r.droppable);\n        }\n    };\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <div className=\"App\">\n                <Wrapper>\n                    {/* Aircrafts List */}\n                    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n                        <Header>Aircrafts</Header>\n                        <List>\n                            {aircrafts.map((aircraft) => (\n                                <AircraftCard key={aircraft.ident} aircraft={aircraft} percentage={usage} />\n                            ))}\n                        </List>\n                    </div>\n                    {/* Rotation */}\n                    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\",  width: \"250px\" }}>\n                        <Header>Rotation</Header>\n\n                        <Droppable droppableId={\"rotation\"}>\n                            {(provided) => (\n                                <div ref={provided.innerRef} style={{  width: \"200px\"}}>\n                                    {rotation.map((flight, index) => (\n                                        <Flight\n                                        isDragDisabled={true}\n                                        key={flight.ident}\n                                        index={index}\n                                        flight={flight}\n                                    />))}\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                        <Timeline periods={periods} />\n                     </div>\n                    {/* Flight List */}\n                    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\",  width: \"250px\" }}>\n                    <Header>Available Flights</Header>\n                    <Droppable droppableId={\"droppable\"}>\n                        {(provided) => (\n                            <div  ref={provided.innerRef}>\n                                {availableFlights.map((flight, index) => (\n                                    <Flight\n                                        key={flight.ident}\n                                        index={index}\n                                        flight={flight}\n                                    />)\n                                )}\n                                {provided.placeholder}\n                            </div>)}\n                    </Droppable>\n                    </div>\n                </Wrapper>\n            </div>\n        </DragDropContext>);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}