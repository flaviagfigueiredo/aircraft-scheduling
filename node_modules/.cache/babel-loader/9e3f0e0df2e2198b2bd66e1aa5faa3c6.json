{"ast":null,"code":"var _jsxFileName = \"/Users/flaviafigueiredo/Documents/Github/flavia-aircraft-scheduling/src/App.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-indent */\n\n/* eslint-disable indent */\nimport React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { AircraftCard } from \"./components/AircraftCard\";\nimport Flight from \"./components/Flight/Flight\";\nimport { List } from \"./components/List\";\nimport { RotationCard } from \"./components/RotationCard\";\nimport { aircrafts, flights } from \"./utils/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n_c = Wrapper;\nconst Header = styled.h2`\n    padding-bottom: 5px;\n`;\n_c2 = Header;\n\nfunction App() {\n  _s();\n\n  const [rotation, setRotation] = useState(flights.slice(2, 1));\n  const [availableFlights, setAvailableFlights] = useState(flights); // a little function to help us with reordering the result\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n  /**\n   * Moves an item from one list to another list.\n   */\n\n\n  const move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return result;\n  };\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    console.log('>>>', result); // Dropped outside the list\n\n    if (!destination) {\n      return;\n    } // Dropped in the same list\n\n\n    if (result.destination.index === result.source.index) return;\n\n    if (source.droppableId === \"droppable\") {\n      const flight = flights.find(f => f.ident === draggableId);\n      setRotation(prev => [...prev, flight]);\n      setAvailableFlights(prev => prev.filter(p => p.ident !== draggableId));\n    }\n\n    const projects = reorder(availableFlights, // project is state \n    result.source.index, result.destination.index); //   setAvailableFlights(projects)\n\n    console.log(move(source, destination, source.droppableSource, source.droppableDestination));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"Aircrafts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: aircrafts.map(aircraft => /*#__PURE__*/_jsxDEV(AircraftCard, {\n            aircraft: aircraft\n          }, aircraft.ident, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"rotation\",\n          children: provided => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: \"Rotation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              innerRef: provided.innerRef,\n              children: rotation.map(flight => /*#__PURE__*/_jsxDEV(RotationCard, {\n                flight: flight\n              }, flight.ident, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [availableFlights.map((flight, index) => /*#__PURE__*/_jsxDEV(Flight, {\n              index: index,\n              flight: flight\n            }, flight.ident, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"J1YRAw0NhJm8z6+qNMkIpNmAg70=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/flaviafigueiredo/Documents/Github/flavia-aircraft-scheduling/src/App.jsx"],"names":["React","useState","DragDropContext","Draggable","Droppable","styled","AircraftCard","Flight","List","RotationCard","aircrafts","flights","Wrapper","div","Header","h2","App","rotation","setRotation","slice","availableFlights","setAvailableFlights","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","onDragEnd","draggableId","console","log","flight","find","f","ident","prev","filter","p","projects","map","aircraft","provided","innerRef","placeholder"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-indent */\n/* eslint-disable indent */\nimport React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { AircraftCard } from \"./components/AircraftCard\";\nimport Flight from \"./components/Flight/Flight\";\nimport { List } from \"./components/List\";\nimport { RotationCard } from \"./components/RotationCard\";\nimport { aircrafts, flights } from \"./utils/data\";\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nconst Header = styled.h2`\n    padding-bottom: 5px;\n`;\n\nfunction App() {\n    const [ rotation, setRotation ] = useState(flights.slice(2,1));\n    const [ availableFlights, setAvailableFlights ] = useState(flights);\n\n    // a little function to help us with reordering the result\n    const reorder = (list, startIndex, endIndex) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n        return result;\n    };\n\n    /**\n     * Moves an item from one list to another list.\n     */\n    const move = (source, destination, droppableSource, droppableDestination) => {\n        const sourceClone = Array.from(source);\n        const destClone = Array.from(destination);\n        const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n\n        destClone.splice(droppableDestination.index, 0, removed);\n\n        const result = {};\n        result[droppableSource.droppableId] = sourceClone;\n        result[droppableDestination.droppableId] = destClone;\n\n        return result;\n    };\n\n\n\n    const onDragEnd = (result) => {\n        const { source, destination, draggableId } = result;\n\n        console.log('>>>', result);\n\n\n        // Dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        // Dropped in the same list\n        if (result.destination.index === result.source.index) return;\n\n        \n        if (source.droppableId === \"droppable\") {\n            const flight = flights.find(f => f.ident === draggableId);\n\n            setRotation(prev => [...prev, flight]);\n            setAvailableFlights(prev => prev.filter((p) =>  p.ident !== draggableId));\n        }\n\n        const projects = reorder(\n            availableFlights, // project is state \n            result.source.index,\n            result.destination.index\n          );\n\n        //   setAvailableFlights(projects)\n\n        console.log(move(source, destination, source.droppableSource, source.droppableDestination));\n            \n    };\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <div className=\"App\">\n                <div>Header</div>\n                <Wrapper>\n\n                    {/* Aircrafts List */}\n                    <Header>Aircrafts</Header>\n                    <List>\n                        {aircrafts.map((aircraft) => (\n                            <AircraftCard key={aircraft.ident} aircraft={aircraft} />\n                        ))}\n                    </List>\n\n                    {/* Rotation */}\n                    <Droppable droppableId={\"rotation\"}>\n                        {(provided) => (\n                            <>\n                                <Header>Rotation</Header>\n                                <List innerRef={provided.innerRef}>\n                                    {rotation.map((flight) => (\n                                        <RotationCard\n                                            key={flight.ident}\n                                            flight={flight} />\n                                    ))}\n                                </List>\n                            </>)\n                        }\n                    </Droppable>\n\n                    {/* Flight List */}\n                    <Droppable droppableId={\"droppable\"}>\n                        {(provided) => (\n                            <div>\n                                {availableFlights.map((flight, index) => (\n                                    <Flight \n                                        key={flight.ident}\n                                        index={index}\n                                        flight={flight}\n                                    />)\n                                )}\n                                {provided.placeholder}\n                            </div>)}\n                    </Droppable>\n                </Wrapper>\n                \n            </div>\n        </DragDropContext>);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}